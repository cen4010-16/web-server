version: "3.8"

services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        env_file:
            - .env
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
            - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
            - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            - flyway
    flyway:
        image: flyway/flyway
        command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
        environment:
            - FLYWAY_USER=${POSTGRES_USER}
            - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
            - FLYWAY_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
        volumes:
            - ${PWD}/sql/${POSTGRES_DB}/migrations:/flyway/sql
        depends_on:
            database:
                condition: service_healthy
    database:
        image: 'postgres:14.1-alpine'
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        volumes:
            - ${PWD}/sql/postgres-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
            interval: 10s
            timeout: 5s
            retries: 5